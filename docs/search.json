[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ReseachNotes",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n\nCode\n1 + 1\n\n\n[1] 2"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n\nCode\n1 + 1\n\n\n[1] 2"
  },
  {
    "objectID": "posts/Quarto_blog.html",
    "href": "posts/Quarto_blog.html",
    "title": "Quarto Blog",
    "section": "",
    "text": "Prerequisite:\nTo avoid the light-box filter error, install the lightbox extension inside the project folder itself. It is required for function of lightbox. (see Complete Lightbox Example post for more details)\n``` bash\nquarto add quarto-ext/lightbox\n```\nTo create a blog page in Quarto:\n\nAdd the menu in the navbar section of the _quarto.yml file\n      - href: blog.qmd\n        text: \"Blog\"\nCreate blog.qmd file and a posts folder.\ntouch blog.qmd  \nmkdir posts \nIn the blog.qmd file add the head yml code:\ntitle: \"Blog\"\nlisting:\n  contents: posts # Contents will be taken from the posts folder\n  sort: \"date desc\"\n  type: default\n  categories: true\npage-layout: full\n#margin-header: signup.html\ntitle-block-banner: \"#EDF3F9\"\ntitle-block-banner-color: body\nsearch: false\nThis file is the the “main page” or “landing page” for the blogs.\nAll subsequent blog files need to be saved in the posts folder.The yml in this file will direct to the folder and the way is displayed.　 In other words, the yml section, the listing for this page comes from the contents in the folder posts…“contents: posts”\nQ: For organization convenience… Can I place this landing page file directly into the posts folder? No, the posts will be displayed in this page.\nEach blog post should have the proper yaml heading:\n\nCreate a .qmd file within the /posts folders.\ncd posts\ntouch file_name.qmd\nSimple example:\ntitle: \"Minimal post\"\ndescription: \"Post description\"\nauthor: \"Marcelo Rosales\"\ndate: \"2023/03/13\"\ncategories:\n  - news\n  - code\n  - analysis\nExample with lightbox filters, and html format\ntitle: \"Complete Lightbox Example\"\ndescription: \"How to use Lightbox\"\nauthor: \"Marcelo Rosales\"\ndate: \"2023/03/13\"\ncategories:\n  - photos\n  - lightbox\n  - gallelry\nfilters:\n  - lightbox\nlightbox:\n  match: auto\n  effect: fade\n  desc-position: right\n  loop: true\n#  css-class: \"my-css-class\" #only if custom css file exists. \nformat: \n  html: \n    code-fold: true\n    code-copy: true\n    code-overflow: wrap\nEditor: Source \nThere are also specific templates, ex. Jolla template:\ntitle: \"Jolla template\"\ndescription: \"quarto templates\"\nauthor: \"Marcelo Rosales\"\ndate: \"2023/03/16\"\ncategories:\n  - quarto\n  - code\n  - templates\n\nabout:\n  id: hero-heading\n  template: jolla\n  image: images/img01.png\n  links:\n    - icon: twitter\n      text: twitter\n      href: https://twitter.com\n    - icon: github\n      text: Github\n      href: https://github.com\n\n\nAdd content"
  },
  {
    "objectID": "posts/FPT_deploy.html",
    "href": "posts/FPT_deploy.html",
    "title": "Quarto Blog",
    "section": "",
    "text": "File > New Project > New directory > Quarto website > Browse: ~/Documents/GitHub/Quarto; dir name: descSPIM_LSmicro > create repository.\n\nTo wrap code in Rstudio: //Code » Soft wrap long lines\n\nFiles:\n\nRenv »\n\nstyles.css »\n_quarto.yml\nrenv.lock\nabout.qmd\nindex.qmd\nResearch_Notes_230601.Rproj\n\n\nFiles + hiden files:\n\n.git »\n.Rproj.user »\nRenv »\n\nstyles.css\n_quarto.yml\n.gitignore\nrenv.lock\nabout.qmd\nindex.qmd\nResearch_Notes_230601.Rproj\n\n\nRender Q site files:\n\n_site »\n.git\n.quarto\n.Rproj.user\nrenv\n\nstyles.css\n_quarto.yml\n.gitignore\n.Rprofile\nrenv.lock\nabout.qmd\nindex.qmd\nResearch_Notes_230601.Rproj\n\n\nOpen files:\n\nindex.qmd,\n_quarto.yml\n\nFolder contains:\n\nstyles.css\nabout.qmd\nindex.qmd\ndescSPIM_LSmicro.Rproj\n_quarto.yml\n\n\n\n\nAuto-completion works by pressing tab. Careful!! tab level influence auto-complation options. If in the wrong level, then option will not be found.\nSee:\nWebsite Navigation Page Layout\n\n\nChange output form _site to docs.\nproject:\n  type: website\n  output-dir: docs\n_quarto.yml simple template-01:\n``` {#_quarto.yml template-01: .yaml} project: type: website output-dir: docs\nwebsite: title: “Site_name” image: “images/img01.png” # where this images goes?. only works with specifit themes?… favicon: “images/favicon.png” # Small icon in the bewbrowser tab (ex. uni logo) open-graph: true #https://quarto.org/docs/websites/website-tools.html, https://www.youtube.com/watch?v=QwEQKM4YRnU&t=2s #twitter-card: true #https://quarto.org/docs/websites/website-tools.html#twitter-cards search: true\nnavbar: left: - href: index.qmd text: Home - about.qmd\nformat: html: fontsize: “5” toc: true toc-depth: 6 theme: light: [cosmo, theme.scss] dark: [cosmo, theme-dark.scss] # change theme (cosmo) colors and formats in the scss files code-copy: true code-fold: true code-overflow: wrap code-block-bg: true code-block-border-left: “#31BAE9” # code-line-numbers: true css: styles.css # include-after-body: js.html # self-contained: false # If true, it will not create the site files but one html file. # grid: # sidebar-width: 250px # body-width: 900px # margin-width: 300px # tbl-colwidths: [40, 60] # tables column withs 40% and 60% docx: default\neditor: visual\n\n\\_quarto.yml simple template-02:\n\n``` {#_quarto.yml template-02: .yaml}\nproject:\n  type: website\n  output-dir: docs\n\nwebsite:\n  title: \"descSPIM_LSmicro\"\n  favicon: \"\"\n  open-graph: true\n  search: true\n  navbar:\n    background: light\n    logo: \"\"\n    logo-alt: \"\"\n    logo-href: \"\"\n    collapse-below: lg\n    \n    left:\n      - href: index.qmd\n        text: \"Home\"\n      - href: about.qmd\n        text: \"About\"\n      - href: Software.qmd\n        text: \"Software\"\n  \n      - text: \"Protocols\"\n        menu: \n          - href: supplementary/Protocols/Cubic/Cubic.qmd\n            text: \"Cubic\"\n  \n      - text: \"Supplementary\"\n        menu: \n          - href: supplementary/3dimaging/index.qmd\n            text: \"3D Imaging\"\n          - href: supplementary/construction/index.qmd\n            text: \"Construction\"\n          - href: supplementary/OpticalAligment/OpticalAligment.qmd\n            text: \"Optical Aligment\"\n\n    right: \n      - icon: github\n        href: \"https://marcelorosales.github.io/descSPIM_LSmicro/\"\n      - icon: rss\n\n  sidebar: \n    - id: \"\"\n\nformat:\n  html:\n    theme: \n      light: [cosmo, theme.scss]\n      dark: [cosmo, theme-dark.scss]\n    css: styles.css\n    code-copy: true\n    code-overflow: wrap\n    code-link: true\n    toc: true\n    include-after-body: js.html\n    self-contained: false\n    grid:\n      sidebar-width: 250px\n      body-width: 900px\n      margin-width: 300px\n\neditor: source\n\n_quarto.yml template-03:\n``` {#_quarto.yml template-03: .yaml} project: type: website output-dir: docs\nwebsite: title: “MySite” image: “images/img01.png” # where this images goes?. only works with specifit themes?… favicon: “images/favicon.png” # Small icon in the bewbrowser tab (ex. uni logo) open-graph: true #https://quarto.org/docs/websites/website-tools.html, https://www.youtube.com/watch?v=QwEQKM4YRnU&t=2s #twitter-card: true #https://quarto.org/docs/websites/website-tools.html#twitter-cards search: true navbar: background: light # this is the color option of the nav bg, but I set color in format: with theme.scss. # Options:primary, secondary, success, danger, warning, info, light, dark logo: “images/nav_img.png” # logo in nav bar. logo-alt: “link to Mkdocs” logo-href: “https://marcelorosales.github.io/MkDocsTest1/MkDocs/” collapse-below: lg\nleft:\n  - text: \"Home\"\n    href: index.qmd\n  - text: \"About\"\n    href: about.qmd\n  - text: \"All Notes\"\n    href: All_notes.qmd\n  - text: \"Software\"   #  href: files/Software/index.qmd # Dropdown menu can not have lading page. \n    menu: \n      - text: \"RStudio\"\n        href: files/Software/RStudio/index.qmd # when inputing index.qmd doesnt work. Try other file and retry.\n      - text: \"ImageJ\"\n        href: files/Software/ImageJ/index.qmd\n      - text: \"Analyze12\"\n        href: files/Software/Analyze12/index.qmd\n  - text: \"Blog\"\n    href: blog.qmd\n  - text: \"NavSubmenu\"\n    menu:\n      - text: \"Notes & 2do\"\n        href: files/Notes_2do/index.qmd #In \"\" because & is not a valid caracter for raw yml\n      - text: \"Report a Bug\"\n        icon: \"bug\"\n        href: \"https://github.com/quarto-dev/quarto-cli/issues\"\n      - text: \"Ask a Question\"\n        icon: \"chat-right-text\"\n        href: \"https://github.com/quarto-dev/quarto-cli/discussions\"\n      - text: \"FAQ\"\n        icon: \"question-circle\""
  },
  {
    "objectID": "posts/FPT_deploy.html#core-shell-01",
    "href": "posts/FPT_deploy.html#core-shell-01",
    "title": "Quarto Blog",
    "section": "Core-shell 01",
    "text": "Core-shell 01\nNow I am going to recreate the whole process in one go from scratch.\nFTPtest01:\nNote: it is easyer to create the repository in github first and then clone it to local (but it is better to know the process of creating the page first and then connecting to the github).\nRequirements before starting:\n\nHave a web hosting service (now using Hostinger.com ~80$y )\nHave a domain\n\nprostho2.com, 3 years, ID: 169kGMTjEV0XCrNF\nAuto-renew on, Renewal date: 2026-06-09\nprice: $10 (first year), Renewal price: $45.51…? (not ~$15?)\ndescsimp.online, 1 year, ID: Azq9UZTivX2bpNrZ0\nAuto-renew off, Expiration date: 2024-07-04\nprice: $1 (first year), Renewal price $35.17\n\n\nMain steps:\n\nCreate quarto website (local) repo\nCreate github repo.\nConnect local and github repo\nCreate sub-domain in Hostinger (with sub-folder)\nCreate new ftp account in Hostinger\nDelete all files in sub-folder\nSet GitHub secrets\nCreate Git Actions / workflows (deploy & control)\nRender and Test actions\n\nDescription:\n\ncreate quarto (local) repo\n\nfile new project » New directory » Quarto website » FTPtest01; ©create git repo; ©use renv for this project » create project\nOpen the _quarto.yml » in “project” type: output-dir: docs\nor… for fast deployment copy/paste _quarto.yml template 04.\nCreate scss files for theme and theme-dark options Copy/paste file:\nscss_files <- \"/Users/marcelorosales/Box Sync/Github/QuartoFiles\"\nsystem(paste(\"open\", shQuote(scss_files)))\nTo avoid the light-box filter error, install the lightbox extension inside the project folder itself. It is required for function of lightbox. (see Complete Lightbox Example post for more details)\nquarto add quarto-ext/lightbox\nBetter Not Render project to create the website until the end, normally a _site folder will is created but we changed output-dir: docs, so /docs folder will created instead and will be used to deploy the site in github.\n\ncreate github repo.\n\nNew repository » FPTtest01 » ©public » create repository\n\ngit ignore files: R,\nAdd /_site/ to .gitignore after creating the file\nAdd a .nojekyll file\nto the root of your repository that tells GitHub Pages not to do additional processing of your published site using Jekyll (the GitHub default site generation tool). see: Quarto-GitHub Pages\ntouch .nojekyll\nAdd other files or dir as necessary\n\nSettings » Pages » Branch: main; /docs » save\nset address in About (info) Got to // Code » code » clone » htpps (copy github page address)\n\nconnect local and github repo github quick setup.\n\nin github » code » copy https address » https://github.com/name/FTPtst01.git\nIn terminal:\ngit remote add origin https://github.com/MarceloRosales/FPTtest01.git\ngit branch -M main\ngit pull\ngit push -u origin main\n\n# error: src refspec main does not match any\n# error: failed to push some refs to 'https://github.com/MarceloRosales/FPTtest01.git'\n# This is (probably) because there is no previous commits to match with.\n\n\n\ngit add .\ngit commit -m \"fist commit\"\ngit push -u origin main\n# git pull\n# git branch --set-upstream-to=origin/main     \ngit push --set-upstream origin main\ngit config pull.rebase false    \n\ngit push -f origin main #this seems to solve the probelm\n\n#  ----- may not need this code\n\ngit pull    \n# There is no tracking information for the current branch.\ngit add .\ngit commit -m \"second commit\"\ngit push  \n# fatal: The current branch main has no upstream branch.\ngit push --set-upstream origin main\n\n# add text and render \ngit add .\ngit commit -m \"second commit\"\ngit push  \ngit status \n\n# Success!!!!\n\nComments:\nnew github repo message:\nQuick setup — if you’ve done this kind of thing before or\nhttps://github.com/MarceloRosales/FPTtest01.git\nGet started by creating a new file or uploading an existing file. We recommend every repository include a README, LICENSE, and .gitignore.\n…or create a new repository on the command line\necho \"# FPTtest01\" >> README.md\ngit init\ngit add README.md\ngit commit -m \"first commit\"\ngit branch -M main\ngit remote add origin https://github.com/MarceloRosales/FPTtest01.git\ngit push -u origin main\n…or push an existing repository from the command line\ngit remote add origin https://github.com/MarceloRosales/FPTtest01.git\ngit branch -M main\ngit push -u origin main\n…or import code from another repository\nYou can initialize this repository with code from a Subversion, Mercurial, or TFS project.\n\n\n\n\n\ncreate subdomain in hostinger.\nHome » Premium Web Hosting » Manage » ©[descsimp.online] » ˇDomains » Subdomains » Enter Subdomain: Sub_name » ©Custom folder for subdomain: Sub_name » Create\ncreate a new ftp account in hostinger\nHome » Premium Web Hosting » Manage » ©[descsimp.online] » ˇFiles » FTP Accounts » Create a new FTP Account » Directory: /public_html/Sub_name/ » Username: Sub_name » Password: LSmicro23 » Create\n\nUsername: ResearchNotes; A愛2\n\nsubfolder is created in hostinger with a php file, with manager delete all files and make sure is empty\nSet secrets in github\n\nDefine secrets, go // Settings » Secrets and variables » Actions » New repository secret » (create 2 secrets)…\n\nFTP_username (lsmicro or u567637261.lsmicro ?\n\nu567637261.descsimp.online ?\nu567637261.FTPtest01\nu567637261.ResearchNotes\n\nFTP_password\n\nLSmicro23\n\"\nA愛２\n\n\n\nCreate Git Actions / workflows (deploy & control yml)\nThis link here creating your first workfolow was the key to unlock the problems of FTP deployment. There is a demo to check if actions are working.\n\ncreate folder .github/workflows/\nmkdir -p .github/workflows/\nCreate ftpdeploy.yml (set server: ftptest01.descsimp.online [subdomain!!] and change remote-dir: …)\ncd .github/workflows/\ntouch ftpdeploy.yml github-actions-demo.yml\n# for serial files\n# touch file_name{0001..0003}.txt\nname: 🚀 FTP Deploy\non:\n  push:\n    branches:\n      - main\njobs:\n  web-deploy:\n    name: 🎉 Deploy\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout Repository\n        uses: actions/checkout@v3\n      - name: FTP Deploy\n        uses: SamKirkland/FTP-Deploy-Action@v4.3.4\n        with:\n          server: ftptest01.descsimp.online # Subdomain name. !!NOT: FTP Accouns » Active hostname.. See:  //Hosting » Dashboard » Domains » Subdomains » List of current subdomains\n          username: ${{ secrets.FTP_USERNAME }} # Set in github  \n          password: ${{ secrets.FTP_PASSWORD }} # Set in github  \n          local-dir: ./docs/\n          remote-dir: ./public_html/FTPtest01/ # or subdomain folder\nCreate github-actions-demo.yml as control…\nname: GitHub Actions Demo\nrun-name: ${{ github.actor }} is testing out GitHub Actions 🚀\non: [push]\njobs:\n  Explore-GitHub-Actions:\n    runs-on: ubuntu-latest\n    steps:\n      - run: echo \"🎉 The job was automatically triggered by a ${{ github.event_name }} event.\"\n      - run: echo \"🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!\"\n      - run: echo \"🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}.\"\n      - name: Check out repository code\n        uses: actions/checkout@v3\n      - run: echo \"💡 The ${{ github.repository }} repository has been cloned to the runner.\"\n      - run: echo \"🖥️ The workflow is now ready to test your code on the runner.\"\n      - name: List files in the repository\n        run: |\n          ls ${{ github.workspace }}\n      - run: echo \"🍏 This job's status is ${{ job.status }}.\"\nrender and commit\n\nCheck actions in github. Actions » All workflows » FTP Deploy (green check means success!!)\nSave all and start pages content.\nTo create a blog:\n\nAdd the menu in the navbar section of the _quarto.yml file\n      - href: blog.qmd\n        text: \"Blog\"\nCreate blog.qmd file and a posts folder.\ntouch blog.qmd  \nmkdir posts \nIn the blog.qmd file add the head yml code:\ntitle: \"Blog\"\nlisting:\n  contents: posts # Contents will be taken from the posts folder\n  sort: \"date desc\"\n  type: default\n  categories: true\npage-layout: full\n#margin-header: signup.html\ntitle-block-banner: \"#EDF3F9\"\ntitle-block-banner-color: body\nsearch: false\nThis file is the the “main page” or “landing page” for the blogs.\nAll subsequent blog files need to be saved in the posts folder.The yml in this file will direct to the folder and the way is displayed.　 In other words, the yml section, the listing for this page comes from the contents in the folder posts…“contents: posts”\nQ: For organization convenience… Can I place this landing page file directly into the posts folder? No, the posts will be displayed in this page.\nEach blog post should have the proper yaml heading:\n\nCreate a .qmd file within the /posts folders.\ncd posts\ntouch file_name.qmd\nSimple example:\ntitle: \"Minimal post\"\ndescription: \"Post description\"\nauthor: \"Marcelo Rosales\"\ndate: \"2023/03/13\"\ncategories:\n  - news\n  - code\n  - analysis\nExample with lightbox filters, and html format\ntitle: \"Complete Lightbox Example\"\ndescription: \"How to use Lightbox\"\nauthor: \"Marcelo Rosales\"\ndate: \"2023/03/13\"\ncategories:\n  - photos\n  - lightbox\n  - gallelry\nfilters:\n  - lightbox\nlightbox:\n  match: auto\n  effect: fade\n  desc-position: right\n  loop: true\n#  css-class: \"my-css-class\" #only if custom css file exists. \nformat: \n  html: \n    code-fold: true\n    code-copy: true\n    code-overflow: wrap\nEditor: Source \nThere are also specific templates, ex. Jolla template:\ntitle: \"Jolla template\"\ndescription: \"quarto templates\"\nauthor: \"Marcelo Rosales\"\ndate: \"2023/03/16\"\ncategories:\n  - quarto\n  - code\n  - templates\n\nabout:\n  id: hero-heading\n  template: jolla\n  image: images/img01.png\n  links:\n    - icon: twitter\n      text: twitter\n      href: https://twitter.com\n    - icon: github\n      text: Github\n      href: https://github.com\n\n\n\nl"
  },
  {
    "objectID": "posts/FPT_deploy.html#other-references",
    "href": "posts/FPT_deploy.html#other-references",
    "title": "Quarto Blog",
    "section": "Other References:",
    "text": "Other References:\nHow to manage DNS Records at Hostinger\nManaging a custom domain for your GitHub Pages site\nCompare the Best Domain Hosting of 2023\n\n\n\n Auto Deploy Github Project into cPanel Shared Hosting With Github Actions CI/CD\n\n\n How To Use Git Version Control in cPanel | Git Tutorial by Web Hosting Canada\n\n\n How To Implement GitHub Actions To Your Workflows (With React & cPanel)\n\n\n\n\n Automatic Deployments On Shared Hosting\n\n\n Hostinger Redirects: How Do I Redirect with Hostinger using hpanel?\n\n\n (02) Setup Ftp Details For Automation | Build CI/CD pipeline with GitHub Actions\n\n\n\n\nHow to create an FTP account in Hostinger and upload with Filezilla?\n\n\n How to create an FTP account in Hostinger and upload with Filezilla?\n\n\n Deploy to shered hosting using github actions\n\n\n\n\n Hostinger PRO Panel: Make money and Manage Your Clients’ Websites Easily"
  }
]