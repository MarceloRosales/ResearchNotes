[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ReseachNotes",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n\nCode\n1 + 1\n\n\n[1] 2"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n\nCode\n1 + 1\n\n\n[1] 2"
  },
  {
    "objectID": "posts/Quarto_blog.html",
    "href": "posts/Quarto_blog.html",
    "title": "Quarto Blog",
    "section": "",
    "text": "Prerequisite:\nTo avoid the light-box filter error, install the lightbox extension inside the project folder itself. It is required for function of lightbox. (see Complete Lightbox Example post for more details)\nquarto add quarto-ext/lightbox\nTo create a blog page in Quarto:\n\nAdd the menu in the navbar section of the _quarto.yml file\n      - href: blog.qmd\n        text: \"Blog\"\nCreate blog.qmd file and a posts folder.\ntouch blog.qmd  \nmkdir posts \nIn the blog.qmd file add the head yml code:\ntitle: \"Blog\"\nlisting:\n  contents: posts # Contents will be taken from the posts folder\n  sort: \"date desc\"\n  type: default\n  categories: true\npage-layout: full\n#margin-header: signup.html\ntitle-block-banner: \"#EDF3F9\"\ntitle-block-banner-color: body\nsearch: false\nThis file is the the “main page” or “landing page” for the blogs.\nAll subsequent blog files need to be saved in the posts folder.The yml in this file will direct to the folder and the way is displayed.　 In other words, the yml section, the listing for this page comes from the contents in the folder posts…“contents: posts”\nQ: For organization convenience… Can I place this landing page file directly into the posts folder? No, the posts will be displayed in this page.\nEach blog post should have the proper yaml heading:\n\nCreate a .qmd file within the /posts folders.\ncd posts\ntouch file_name.qmd\nSimple example:\ntitle: \"Minimal post\"\ndescription: \"Post description\"\nauthor: \"Marcelo Rosales\"\ndate: \"2023/03/13\"\ncategories:\n  - news\n  - code\n  - analysis\nExample with lightbox filters, and html format\ntitle: \"Complete Lightbox Example\"\ndescription: \"How to use Lightbox\"\nauthor: \"Marcelo Rosales\"\ndate: \"2023/03/13\"\ncategories:\n  - photos\n  - lightbox\n  - gallelry\nfilters:\n  - lightbox\nlightbox:\n  match: auto\n  effect: fade\n  desc-position: right\n  loop: true\n#  css-class: \"my-css-class\" #only if custom css file exists. \nformat: \n  html: \n    code-fold: true\n    code-copy: true\n    code-overflow: wrap\nEditor: Source \nThere are also specific templates, ex. Jolla template:\ntitle: \"Jolla template\"\ndescription: \"quarto templates\"\nauthor: \"Marcelo Rosales\"\ndate: \"2023/03/16\"\ncategories:\n  - quarto\n  - code\n  - templates\n\nabout:\n  id: hero-heading\n  template: jolla\n  # image: images/img01.png\n  links:\n    - icon: twitter\n      text: twitter\n      href: https://twitter.com\n    - icon: github\n      text: Github\n      href: https://github.com\n\n\nAdd content"
  },
  {
    "objectID": "posts/FPT_deploy.html",
    "href": "posts/FPT_deploy.html",
    "title": "Q website FPT deploy",
    "section": "",
    "text": "File > New Project > New directory > Quarto website > Browse: ~/Documents/GitHub/Quarto; dir name: descSPIM_LSmicro > create repository.\n\nTo wrap code in Rstudio: //Code » Soft wrap long lines\n\nFiles:\n\nRenv »\n\nstyles.css »\n_quarto.yml\nrenv.lock\nabout.qmd\nindex.qmd\nResearch_Notes_230601.Rproj\n\n\nFiles + hiden files:\n\n.git »\n.Rproj.user »\nRenv »\n\nstyles.css\n_quarto.yml\n.gitignore\nrenv.lock\nabout.qmd\nindex.qmd\nResearch_Notes_230601.Rproj\n\n\nRender Q site files:\n\n_site »\n.git\n.quarto\n.Rproj.user\nrenv\n\nstyles.css\n_quarto.yml\n.gitignore\n.Rprofile\nrenv.lock\nabout.qmd\nindex.qmd\nResearch_Notes_230601.Rproj\n\n\nOpen files:\n\nindex.qmd,\n_quarto.yml\n\nFolder contains:\n\nstyles.css\nabout.qmd\nindex.qmd\ndescSPIM_LSmicro.Rproj\n_quarto.yml\n\n\n\n\nAuto-completion works by pressing tab. Careful!! tab level influence auto-complation options. If in the wrong level, then option will not be found.\nSee:\nWebsite Navigation Page Layout\n\n\nChange output form _site to docs.\nproject:\n  type: website\n  output-dir: docs\nquarto.yml simple template-01:\nproject:\n  type: website\n  output-dir: docs\n\nwebsite:\n  title: \"Site_name\"\n  image: \"\" # where this images goes?\n  favicon: \"images/favicon.png\" # Small icon in the bewbrowser tab (ex. uni logo)\n  open-graph: true #https://quarto.org/docs/websites/website-tools.html, https://www.youtube.com/watch?v=QwEQKM4YRnU&t=2s\n  #twitter-card: true\n  search: true \n  \n  navbar:\n    left:\n      - href: index.qmd\n        text: Home\n      - about.qmd\n\nformat:\n  html:\n    fontsize: \"5\"\n    toc: true\n    toc-depth: 6\n    theme:\n      light: [cosmo, theme.scss]\n      dark: [cosmo, theme-dark.scss] # change theme (cosmo) colors and formats in the scss files\n    code-copy: true\n    code-fold: true\n    code-overflow: wrap\n    code-block-bg: true\n    code-block-border-left: \"#31BAE9\"\n#    code-line-numbers: true\n\n    css: styles.css\n#    include-after-body: js.html\n#    self-contained: false # If true, it will not create the site files but one html file. \n#    grid:\n#      sidebar-width: 250px\n#      body-width: 900px\n#      margin-width: 300px\n#    tbl-colwidths: [40, 60]  # tables column withs 40% and 60%\n  docx: default\n\neditor: visual\nquarto.yml simple template-02:\nproject:\n  type: website\n  output-dir: docs\n\nwebsite:\n  title: \"descSPIM_LSmicro\"\n  favicon: \"\"\n  open-graph: true\n  search: true\n  navbar:\n    background: light\n    logo: \"\"\n    logo-alt: \"\"\n    logo-href: \"\"\n    collapse-below: lg\n    \n    left:\n      - href: index.qmd\n        text: \"Home\"\n      - href: about.qmd\n        text: \"About\"\n      - href: Software.qmd\n        text: \"Software\"\n  \n      - text: \"Protocols\"\n        menu: \n          - href: supplementary/Protocols/Cubic/Cubic.qmd\n            text: \"Cubic\"\n  \n      - text: \"Supplementary\"\n        menu: \n          - href: supplementary/3dimaging/index.qmd\n            text: \"3D Imaging\"\n          - href: supplementary/construction/index.qmd\n            text: \"Construction\"\n          - href: supplementary/OpticalAligment/OpticalAligment.qmd\n            text: \"Optical Aligment\"\n\n    right: \n      - icon: github\n        href: \"https://marcelorosales.github.io/descSPIM_LSmicro/\"\n      - icon: rss\n\n  sidebar: \n    - id: \"\"\n\nformat:\n  html:\n    theme: \n      light: [cosmo, theme.scss]\n      dark: [cosmo, theme-dark.scss]\n    css: styles.css\n    code-copy: true\n    code-overflow: wrap\n    code-link: true\n    toc: true\n    include-after-body: js.html\n    self-contained: false\n    grid:\n      sidebar-width: 250px\n      body-width: 900px\n      margin-width: 300px\n\neditor: source\nquarto.yml template-03:\nproject:\n  type: website\n  output-dir: docs\n\nwebsite:\n  title: \"MySite\"\n  image: \"images/img01.png\" # where this images goes?. only works with specifit themes?...\n  favicon: \"images/favicon.png\" # Small icon in the bewbrowser tab (ex. uni logo)\n  open-graph: true #https://quarto.org/docs/websites/website-tools.html, https://www.youtube.com/watch?v=QwEQKM4YRnU&t=2s\n  #twitter-card: true #https://quarto.org/docs/websites/website-tools.html#twitter-cards\n  search: true \n\n  navbar:\n    background: light # this is the color option of the nav bg, but I set color in format: with theme.scss. # Options:`primary`, `secondary`, `success`, `danger`, `warning`, `info`, `light`, `dark`\n    logo: \"images/nav_img.png\" # logo in nav bar.\n    logo-alt: \"link to Mkdocs\"\n    logo-href: \"https://marcelorosales.github.io/MkDocsTest1/MkDocs/\"\n    collapse-below: lg\n    \n    left:\n      - text: \"Home\"\n        href: index.qmd\n      - text: \"About\"\n        href: about.qmd\n      - text: \"All Notes\"\n        href: All_notes.qmd\n\n      - text: \"Software\"   \n        menu: \n          - text: \"RStudio\"\n            href: files/Software/RStudio/index.qmd # when inputing index.qmd doesnt work. Try other file and retry.\n          - text: \"ImageJ\"\n            href: files/Software/ImageJ/index.qmd\n          - text: \"Analyze12\"\n            href: files/Software/Analyze12/index.qmd\n      - text: \"Blog\"\n        href: blog.qmd\n      - text: \"NavSubmenu\"\n        menu:\n          - text: \"Notes & 2do\"\n            href: files/Notes_2do/index.qmd #In \"\" because & is not a valid caracter for raw yml\n          - text: \"Report a Bug\"\n            icon: \"bug\"\n            href: \"https://github.com/quarto-dev/quarto-cli/issues\"\n          - text: \"Ask a Question\"\n            icon: \"chat-right-text\"\n            href: \"https://github.com/quarto-dev/quarto-cli/discussions\"\n          - text: \"FAQ\"\n            icon: \"question-circle\"\n#            href: docs/faq/index.qmd\n\n    right: \n      - icon: github\n        href: https://github.com/quarto-dev/quarto-cli\n#        text: Quarto GitHub\n      - icon: rss\n        href: https://quarto.org/docs/blog/index.xml\n        \n  sidebar:\n    - id: RStudio \n      title: \"Get Started with the RStudio\"\n      style: \"floating\"\n      collapse-level: 3\n      align: left\n      contents:  \n        - text: R Studio\n          href: files/Software/RStudio/index.qmd  \n        - text: \"Install\"\n          href: files/Software/RStudio/R_install.qmd  \n        - text: \"R Packages\"\n          href: \"\"\n\n    - id: ImageJ \n      title: \"Get Started with ImageJ\"\n      style: \"floating\"\n      collapse-level: 3\n      align: left\n      contents:  \n        - files/Software/ImageJ/index.qmd  \n        - text: \"Install\"\n          href: files/Software/ImageJ/ImgJ_install.qmd  \n        - text: \"ImgJ Packade\"\n          href: files/Software/ImageJ/ImgJ_Packages.qmd\n        - text: \"Git try\"\n          href: posts/Git.qmd\n\nformat:\n  html:\n    fontsize: \"\"\n    toc: true\n    toc-depth: 6\n    theme:\n      light: [cosmo, theme.scss]\n      dark: [cosmo, theme-dark.scss] # change theme (cosmo) colors and formats in the scss files\n    code-copy: true\n    code-fold: false\n    code-overflow: wrap\n    code-block-bg: true\n    code-block-border-left: \"#31BAE9\"\n#    code-line-numbers: true\n\n    css: styles.css\n    include-after-body: js.html\n    self-contained: false # If true, it will not create the site files but one html file. \n    grid:\n      sidebar-width: 250px\n      body-width: 900px\n      margin-width: 300px\n#    tbl-colwidths: [40, 60]  # tables column withs 40% and 60%\n\n\nfilters:\n  - lightbox #this section is for the managing img as galleries\nlightbox:\n  match: auto\n\neditor: source\neditor_options:\n  markdown:\n    canonical: true\n\n#execute: \n#  freeze: auto  # This prevent R, Python, and Julia code is only executed locally,\nquarto.yml template-04 (comprehensive):\nproject:\n  type: website\n  output-dir: docs\n\nwebsite:\n  title: \"Site_name\"\n  image: \"\" # where this images goes?\n  favicon: \"\" # Browsers' tab icon (uni logo)\n  open-graph: true \n  twitter-card: true \n  search: true \n\n  navbar:\n    background: light\n    logo: \"\"\n    logo-alt: \"\"\n    logo-href: \"\"\n    collapse-below: lg\n    \n    left:\n      - href: index.qmd\n        text: \"Home\"\n      - href: about.qmd\n        text: \"About\"\n      - href: blog.qmd\n        text: \"Blog\"\n  \n      - text: \"Software\"   \n        menu: \n          - text: \"RStudio\"\n            href: \"\" # Ex. files/Software/RStudio/Rstudio.qmd \n          - text: \"ImageJ\"\n            href: \"\" \n          - text: \"Analyze12\"\n            href: \"\"\n\n      - text: \"NavSubmenu\"\n        menu:\n          - text: \"Notes\"\n            href: \"\"\n          - text: \"Report a Bug\"\n            icon: \"bug\"\n            href: \"\"\n          - text: \"Ask a Question\"\n            icon: \"chat-right-text\"\n            href: \"https://github.com/quarto-dev/quarto-cli/discussions\"\n          - text: \"FAQ\"\n            icon: \"question-circle\"\n            href: \"\"\n\n    right: \n      - icon: github\n        href: \"https://marcelorosales.github.io/descSPIM_LSmicro/\"\n#        text: Quarto GitHub\n      - icon: rss\n        href: https://quarto.org/docs/blog/index.xml\n\n  sidebar:\n    - id: RStudio \n      title: \"Get Started with the RStudio\"\n      style: \"floating\"\n      collapse-level: 3\n      align: left\n      contents:  \n        - text: R Studio\n          href: \"\" # ex. files/Software/RStudio/index.qmd  \n        - text: \"Install\"\n          href: \"\"\n\n    - id: ImageJ \n      title: \"Get Started with ImageJ\"\n      style: \"floating\"\n      collapse-level: 3\n      align: left\n      contents:  \n        - text: \"Install\"\n          href: \"\"\n        - text: \"ImgJ Packade\"\n          href: \"\"\n        - text: \"Git try\"\n          href: \"\"\n\n\nformat:\n  html:\n    fontsize: \"\"  # \"5\"\n    toc: true\n    toc-depth: 6\n    theme:\n      light: [cosmo, theme.scss]\n      dark: [cosmo, theme-dark.scss] # change theme (cosmo) colors and formats in the scss files\n    code-copy: true\n    code-fold: true\n    code-overflow: wrap\n    code-block-bg: true\n    code-block-border-left: \"#31BAE9\"\n#    code-line-numbers: true\n    code-link: true\n    css: styles.css\n#    include-after-body: js.html\n#    self-contained: false # If true, it will not create the site files but one html file. \n#    grid:\n#      sidebar-width: 250px\n#      body-width: 900px\n#      margin-width: 300px\n#    tbl-colwidths: [40, 60]  # tables column withs 40% and 60%\n  docx: default\n\nfilters:\n  - lightbox # requires install of extension inside the project See \"Complete Lightbox Example\" post $quarto add quarto-ext/lightbox\nlightbox:\n  match: auto\n\neditor: source\neditor_options:\n  markdown:\n    canonical: true\n\n#execute: \n#  freeze: auto  # This prevent R, Python, and Julia code is only executed locally,\n\n\n\ntheme.scss\n/*-- scss:defaults --*/\n$link-color: #39729E;\n$text-muted: #6a737b;\n\n// Navigation element colors\n$footer-bg: #181818;\n$navbar-bg: #EEEEEE ;\n\n\n/*-- scss:rules --*/\n\n.layout-example {\n  background: $gray-500;\n  color: $white;\n  text-align: center;\n  margin-bottom: 1em;\n  font-family: $font-family-monospace;\n  font-size: .875em;\n  font-weight: 600;\n  padding-top: 1em;\n  border-radius: 3px;\n}\n\n.left {\n  text-align: left;\n  padding-left: 1em;\n}\n\n.right {\n  text-align: right;\n  padding-right: 1em;\n}\n\n.hello-quarto-banner h1 {\n  margin-top: 0;\n  margin-bottom: 0.5rem;\n}\ntheme-dark.scss\n/*-- scss:defaults --*/\n\n// Base document colors\n$body-bg: #181818;\n$body-color: white;\n$link-color: #75AADB;\n\n$light: #525252;\n\n// Navigation element colors\n$footer-bg: #181818;\n$navbar-bg: #303030;\n\n\n// Code blocks\n$code-block-bg-alpha: -.8;\n\n// Bootstrap popovers\n$popover-bg: #242424;\n\n// Bootstrap inputs\n$input-bg: #242424;\n$dropdown-bg: $body-bg;\n$dropdown-color: $body-color;\n$dropdown-link-color: $body-color;\n$dropdown-link-hover-bg: $gray-600;\n$dropdown-link-hover-color: white;\n\n\n/*-- scss:rules --*/\n\n.layout-example {\n  background: $gray-700;\n}\n\n\n\nOriginal yaml:\nformat:\n  html:\n    theme: cosmo\n    css: styles.css\n    toc: true\nPersonalized html format in yaml:\nformat:\n  html:\n    fontsize: \"5\"\n    toc: true\n    toc-depth: 6\n    theme:\n      light: [cosmo, theme.scss]\n      dark: [cosmo, theme-dark.scss] # change theme (cosmo) colors and formats in the scss files\n    code-copy: true\n    code-fold: false\n    code-overflow: wrap\n    code-block-bg: true\n    code-block-border-left: \"#31BAE9\"\n#    code-line-numbers: true\n    css: styles.css\n    include-after-body: js.html\n    self-contained: false # If true, it will not create the site files but one html file. \n    grid:\n      sidebar-width: 250px\n      body-width: 900px\n      margin-width: 300px\n#    tbl-colwidths: [40, 60]  # tables column withs 40% and 60%\n\n\n\nAdd Icons and search bar:\nwebsite:\n  title: \"MySite\"\n  image: \"images/img01.png\" # where this images goes?. only works with specifit themes?...\n  favicon: \"images/favicon.png\" # Small icon in the bewbrowser tab (ex. uni logo)\n  open-graph: true #https://quarto.org/docs/websites/website-tools.html, https://www.youtube.com/watch?v=QwEQKM4YRnU&t=2s\n  #twitter-card: true #https://quarto.org/docs/websites/website-tools.html#twitter-cards\n  search: true \n\n\n\nto the root of your repository that tells GitHub Pages not to do additional processing of your published site using Jekyll (the GitHub default site generation tool). see: Quarto-GitHub Pages\ntouch .nojekyll\n\n\n\n\nBuild > Render Web site\nRender Q site files:\n\n_site »\n.git\n.quarto\n.Rproj.user\nrenv\n\nstyles.css\n_quarto.yml\n.gitignore\n.Rprofile\nrenv.lock\nabout.qmd\nindex.qmd\nResearch_Notes_230601.Rproj\n\n\n\n\n\n\n\n\nCreate repo\nGithub » create new repo » name: » description: » ©Public » © Add readme file » © Add .gitignore: ˇ{R} » © Create repository\nCreate git ignore:\n\ngit ignore R files\n/_site/\n\nRepo settings:\nSettings » Pages » Source » ˇBranch: © main » /(docs) » ©save (new page is created)\nCopy page address:\nGot to // Code » code » clone » htpps (copy github page address)\nSet page address in About:\nGo to // Code » About » settings (gear) » website » © use your github website » save changes\nIn gitignore add:\n\n\n\n\ngit init\ngit config –global init.defaultBranch main # New repos will use \"main\" as default branch\ngit branch -m main # changes the name of branch from \"master\" to \"main\" git add .\ngit status\ngit config –global user.name <MyGitAccount> # (MR)\ngit config –global user.email <myemail.com> # (hot)\ngit commit -m \"Initial Commit\"\ngit status # (empty)\ngedit gitignore (edit gitignore to do not track files…??)\nMessages:\n(Solved) @ git init: Using ‘master’ as the name for the initial branch. This default branch name is subject to change. To configure the initial branch name to use in all of your new repositories, which will suppress this warning, call:\ngit config –global init.defaultBranch <main> \nNames commonly chosen instead of ‘master’ are ‘main’, ‘trunk’ and ‘development’. The just-created branch can be renamed via this command:\ngit branch -m old-name new-name\n>_:\ngit remote add origin <repo_url>\n\n\n\n\n\n\nWarning\n\n\n\nmessage:\n! [rejected] main -> main (fetch first)\nerror: failed to push some refs to ‘https://github.com/~’\n\n\ngit pull\n\n\n\n\n\n\nWarning\n\n\n\nmessage:\n* [new branch] main -> origin/main\nThere is no tracking information for the current branch.\nPlease specify which branch you want to merge with.\n\n\nWhat to do when git push is rejected\nSolution 1\ngit pull origin main \ngit push origin main\n\n\n\n\n\n\nWarning\n\n\n\n! [rejected] main -> main (fetch first) error: failed to push some refs to ‘https://github.com/MarceloRosales/descSPIM_LSmicro.git’\n\n\nSolution 2 (solved)\ngit push -f origin main # Forces push, careful!! deletes one of the branches (local?/remote?)\ntype github username:\ntype github Password:\n(push from local main branch to remote main branch)\n\nUp to now, there have been conflicts conecting github and local repo; this might help.\nTry next time.\nSee: https://quarto.org/docs/publishing/github-pages.html\nPublish Command\nThe quarto publish command is an easy way to publish locally rendered documents and websites.\nBefore attempting to use quarto publish (either locally or from a GitHub Action) you should be sure to configure the Source Branch and Ignore Output as described below.\nSource Branch\nBefore attempting to publish you should ensure that the Source branch for your repository is gh-pages (now is main ) and that the site directory is set to the repository root (/) (now main ).\nYou can modify these options in Settings : Pages for your repository.\ngit checkout --orphan gh-pages # main?\ngit reset --hard # make sure you've committed changes before running this!\ngit commit --allow-empty -m \"Initialising main branch\"\ngit push origin gh-pages # main?  \nIgnoring Output\nIt’s important to note that you don’t need to check your _site or _book directory into version control (if you have done this in the past you know it makes for very messy diffs!). Before proceeding you should add the output directory of your project to .gitignore. For example:\n.gitignore\n/.quarto/\n/_site/\nIf you’ve already checked these files into source control you may need to remove them explicitly:\ngit rm -r _site\nSee also Freezing Computations.\n\n\n\nModify code. (and save files)\nRender\ngit add .\ngit status\ngit commit -m \"commit message\"\ngit status\ngit push \ngit pull\nOther git commands:\ngit reflog (past git logs)\ngit checkout -b other-branch (Switch to a new branch)\ngit branch -a (lists of branches)\nrm -fr .git (remove git files)\ngit config --global user.name \"MR\"\ngit config --global user.email \"...@ho\"\ngit config credential.helper store\ngit commit -m \"1st commit\"\ngit log  # If want to revert to a preview's version, Copy hash click Q to quit.\ngit checkout {hash copied from log}\ngit checkout -b {new branch name} # Create a new branch.\ngit branch {new branch name} {hash} # Create new branch, if revert to previous, add hash\ngit checkout {branch name} # To change branches\ngit merge {branch name} # merge [](https://qiita.com/Takao\\_/items/5e563d5ea61d2829e497)](https://qiita.com/Takao_/items/5e563d5ea61d2829e497) branch to main\nDeploy to github pages:\nSettings » Pages » Branch: main, built: docs » save\nlink address will be display at the top of the GitHub Pages\nGithub Pages » Your site is live at….\nSet address in Repo profile:\nCode » About (gear icon) » …[]… » website: use you GitHub Pages website\nAdd custom domain:\n\n\n\n\nThere are 2 way of deploying gh pages to web hosts:\n\nThrough webhost cpanel git manager: Uses webhost’s git application.\nThrough github action: Uses github itself to push web to any webhost (seems like a better option)\n\n\n\nHostinger and github for beginners:\n\n\nIn github:\n\nCopy the github url (https): Code » https\n\nGo to Hostinger account:\n// Hosting » Manage » © {website name} » Advance » Git » Create a New Repository »\n\nRepository: Paste url\nBranch: main\nDirectory: folder name ex. LSmicro\n† If empty it will save in Public folder, if folder name, make sure folder is empty.\n© Create\n\nManage Repository\n\nAuto Deployment\nCopy Webhook URL » © Setup webhook on Github » …[]… »\nPaste webhook url in the Payload URL section » © Add webhook\n† Everytime there is a new update committed it will automatically sync and update page.\n\nj\n\n\n\n\n5.3\nDeploy To Shared Hosting With Github Actions\n\n\n\n\nHow to deploy website from GitHub repository?\n\n\n\n\n\n\n// Hostinger » websites (prostho2.hostingerapp.com) » Manage » See details » Nameservers » Copy the Nameservers of the website\nNameservers:\n\nns1.hostinger.com 31.170.163.241\nns2.hostinger.com 31.220.23.1\nns3.hostinger.com 173.192.183.247\nns4.hostinger.com 31.170.164.249\n\nGo to // Domains » Domain Name (prostho2.com) » Manage » Nameservers » Change » Select Nameservers » Paste Name servers of website » Save\nOriginal Nameservers :\n\nns1.dns-parking.com\nns2.dns-parking.com\n\n\n\n\n\n\n\nWarning\n\n\n\nYour indicated nameservers are outdated. We will set Hostinger default nameservers:\nns1.dns-parking.com\nns1.dns-parking.com\nChanging to ns1.hostinger.com fail, and revert to original names.\n\n\nkjf\n\n\n\n\n\n\n\n\n\n﻿1. Buy a Domain\n// Hostinger » domains » get a new domain\nor if you have a domain: Move a Domain Between Different Hostinger Accounts\n\nQ. Regarding the domain, is the .click a reliable domain? or better to go for .com?\nA. Both of the extension domain name in .click or .com is reliable.\nBut the more popular extension domain name is .com and most used one. So it will be better for SEO as well.\nQ. How about prices?\nMy reseller is in hostinger.com. So the price of renewal domain will be :\n\n.online : 0.99$ 1st year then $34.99 + tax\n.com : 1.99$ 1st year then $14.99 + tax\n\nAll will be in USD.\nnext\n\nMy domain prostho2.com is not yet added to your hosting plan, so please add it first and copy the website from prostho2.hostingerapp.com to prostho2.com.\nPlease follow this step-by-step process:\n\n﻿1. Add website to the hosting plan (create new website):\n﻿\n﻿To add a domain to your account, please go to Hosting → Add Website.\nYou can follow the steps, described in this article: How to add a website to hostinger.\nWhile creating the site, set the domain to prostho2.com\n2. Copy the website to the new domain (website)\n﻿\n﻿If your old website is using WordPress, you can move WordPress website to another domain name or subdomain you can do so easily with the Copy website feature of your hPanel! Just follow this guide:\nHow to Copy a WordPress Website to Another Domain Name\n\nBefore starting, it is recommended to back up the content of your destination domain in case it’s not empty, as it will be overwritten. Subdomains on your destination domain will stay unchanged 😊\n﻿\nIf your website is using another CMS, this tutorial will be helpful:\nHow to Move a Website’s Content to Another Domain Name\n3. Change your hosting main domain to the new domain\n﻿\n﻿If you wish to remove the old domain, a new domain must be assigned as the new main domain. More information can be found here: How to change the main domain of your hosting account\nKeep me updated on how it goes and let me know if you have any questions.\ndomain - website\n\nNow the new site is link to the new domain.\n\n\n\nIt is possible to add Sub domains to your domains!!!\nA subdomain is a part of a larger domain name. It is used to organize and categorize different sections or subdivisions of a website. Subdomains are created by adding a prefix to the main domain name, separated by a dot (period). For example:\nMain Domain: example.com\nSubdomain: blog.example.com\nIn this example, “example.com” is the main domain, and “blog” is the subdomain. The subdomain acts as a separate entity within the main domain and can have its own content, functionality, and organization.\nSubdomains are commonly used for various purposes, such as:\n\nOrganizing content: Websites may use subdomains to categorize different sections or types of content. For example, a blog section can be assigned the subdomain “blog.example.com,” while an e-commerce section can use “shop.example.com.”\nMultilingual sites: Subdomains can be used to create versions of a website in different languages. For instance, “fr.example.com” for the French version and “es.example.com” for the Spanish version.\nSeparate services: Subdomains can be used to host separate services or applications associated with the main website. For instance, “mail.example.com” for email services or “app.example.com” for a web application.\nTesting and development: Subdomains can be utilized for testing and development purposes. Developers often create subdomains like “dev.example.com” or “staging.example.com” to work on new features or test changes before deploying them to the main website.\n\nIt’s important to note that subdomains are part of the overall domain name hierarchy, and they can be treated as separate entities for hosting, DNS configuration, and website organization. Each subdomain can have its own content, separate FTP access, or different configuration settings.\nIs quite simple:\n\n// Hostinger » dashboard » Domains » Sub-domains » Create a new sub-domain » Enter sub-domain {name} » © Custom folder for sub-domain {name} » © Create …[ ]…\nIn the lis of current sub-domains a new sub-domain will be created with the link subdomain.domain.com. ex. lsmicro.prostho2.com and is live…\nA new folder is created in Public_html (Custom folder for sub-domain {name}), place your code for the page there and it will available online.\n\n\n\nDeploy To Shared Hosting With Github Actions\n\n\nCreate webpage code (.html)\nCreate a “.github/wokflows/” folders and 2 .yml files\n\nmaster.yml or main.yml ( branch_name.yml)\nstaging.yml\n\nSearch for the ftp-deploy code (from github marker: ftp, deploy sort:popularity-desc)\n\nCode the git actions for each yml files (each branch separately) .\n\n\n\nUse model: FTP Deploy, By SamKirkland. Automate deploying websites and more with this GitHub action via FTP and FTPS. 2.7k stars. FTP Deploy (SamKirkland)\n\n\non: push\nname: 🚀 Deploy website on push\njobs:\n  web-deploy:\n    name: 🎉 Deploy\n    runs-on: ubuntu-latest\n    steps:\n    - name: 🚚 Get latest code\n      uses: actions/checkout@v3\n    \n    - name: 📂 Sync files\n      uses: SamKirkland/FTP-Deploy-Action@v4.3.4\n      with:\n        server: ftp.samkirkland.com\n        username: myFtpUserName\n        password: ${{ secrets.ftp_password }}\n---\nModify code to:\non:\n  push:\n    branches:\n      - main\nname: 🚀 Deploy website on push\njobs:\n  web-deploy:\n    name: 🎉 Deploy\n    runs-on: ubuntu-latest\n    steps:\n    - name: 🚚 Get latest code\n      uses: actions/checkout@v3\n    \n    - name: 📂 Sync files\n      uses: SamKirkland/FTP-Deploy-Action@v4.3.4\n      with:\n        server: ftp.example.com\n        username: ${{ secrets.ftp_username }}\n        password: ${{ secrets.ftp_password }}\n#        server-dir: /public_html/LSmicro.prosth2.com # domain or subdomain\n        local-dir: ./docs/\n        remote-dir: ./public_html/lsmicro/ # or subdomain folder\nPerhaps this code will be better. C-GPT: write an ftp deploy code for github actions.\nname: FTP Deploy\n\non:\n  push:\n    branches:\n      - main\n\njobs:\n  web-deploy:\n    name: 🎉 Deploy\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout Repository\n        uses: actions/checkout@v3\n\n      - name: FTP Deploy\n        uses: SamKirkland/FTP-Deploy-Action@v4.3.4\n        with:\n          server: ftp.example.com\n          username: ${{ secrets.FTP_USERNAME }}\n          password: ${{ secrets.FTP_PASSWORD }}\n          local-dir: ./docs\n          remote-dir: /public_html/docs # or subdomain folder\nAlternatively, in python. C-GPT: write ftp deploy code for the docs folder.\nimport os\nfrom ftplib import FTP\n\n# FTP server credentials\nftp_host = \"ftp.example.com\"\nftp_username = \"your_ftp_username\"\nftp_password = \"your_ftp_password\"\n\n# Local path to the \"docs\" folder\nlocal_path = \"/path/to/docs\"\n\n# Remote path on the FTP server where the \"docs\" folder will be uploaded\nremote_path = \"/public_html/docs\"\n\n# Function to upload a directory and its contents recursively\ndef upload_directory(ftp, local_dir, remote_dir):\n    if not os.path.exists(local_dir):\n        return\n\n    ftp.cwd(remote_dir)\n    for item in os.listdir(local_dir):\n        local_item = os.path.join(local_dir, item)\n        if os.path.isfile(local_item):\n            with open(local_item, \"rb\") as f:\n                ftp.storbinary(\"STOR \" + item, f)\n        elif os.path.isdir(local_item):\n            ftp.mkd(item)\n            upload_directory(ftp, local_item, item)\n    ftp.cwd(\"..\")\n\n# Connect to the FTP server\nftp = FTP(ftp_host)\nftp.login(user=ftp_username, passwd=ftp_password)\n\n# Upload the \"docs\" folder recursively\nupload_directory(ftp, local_path, remote_path)\n\n# Close the FTP connection\nftp.quit()\n\nIf repository not yet created:\n\nCreate git ripo\ngithub quick setup, ` git init » git add. »\ngit init\ngit add .\ngit commit -m \"first commit\"\ngit remote add origin https://github.com/my_github/myrepo.git\ngit push origin master\n\nGit will sync files and forlders. (first commit will fail).\nGo to git » Actions. first commit will fail… because secrets are not define.\n\n\n\n\nDefine secrets, go // Settings » Secrets and variables » Actions » New repository secret » (create 2 secrets)…\n\nSecret 1\n\nName: ftp_username\nValue: yourusername ex. lsmicro or u567637261.lsmicro ?\nu567637261.descsimp.online ?\nAdd secret\n\nSecret 2\n\nName: ftp_password\nValue: yourpass word (for ftp) ex.　 LSmicro23\nAdd secret\n\n\nGo Actions again » © first commit » © Re-run jobs » Re-run all jobs\nClick on deploy to see all details.\nCreate a new branches.\n\nGit create branch “Staging” ????\nReturn to master/main checkout to master ? (allways retun to master/main to create new branches.\ngit crate branch newfeature ???\nmodify/add code to page…\ngit add .\ngit commit -m \"new feature\"\ngit push origin newfeature\nGo back to github repo » Actions… Here no update was performed because changes are updated only when pushed to master/main or staging (here we are pushing to “newfeature”\nChange branch form newfeature to stagin git checkout staging\nMerge newfeature for staging branch\nWhile in “staging” branch git merge newfeature\ngit push origin staging\nNow in github acction the update/sync/deployed will be shown.\n\nAdd modify code as needed. Add, commit, and push to staging. If the new feature is completed and finally approved, merge with master/main branch.\nCheck more ftp options\n\n\n\nIf r\n\n\n\n\n\nHow to create an FTP Account access and upload using ….\nActive hostname:  ftp.descsimp.online\nDirectory: /home/u567637261/domains/descsimp.online/public_html/lsmicro\nUsername: u567637261.lsmicro\nusername: lsmicro\nPass: LSmicro23\nHow to Move a Domain Between Different Hostinger Accounts\n\nDomains:\n\nprostho2.com\ndescsimp.online\nprostho2.hostingerapp.com (old, deprecated)\nwebsitein.hol.es (old, deprecated)\n\nSub-domains:\n\nlsmicro.prostho2.com: (/home/u567637261/domains/prostho2.com/public_html/LSmicro)\nlsmicro.descsimp.com: (/home/u567637261/domains/descsimp.online/public_html/LSmicro)\n\nFTP Accounts:\n\ndescsimp:\n\nFTP Access:\nFTP IP: ftp://31.220.106.221\nFTP hostname: ftp://prostho2.hostingerapp.com\nFTP username: u567637261.descsimp.online\n\n\n\nFTP IP\nftp://31.220.106.221\n\n\nFTP hostname\nftp://prostho2.hostingerapp.com\n\n\nFTP username\nu567637261.descsimp.online\n\n\nFTP port\n21\n\n\nFolder to upload files\npublic_html\n\n\nForgot your FTP password?\nChange FTP password\n\n\nRecommended FTP clients\nSmartFTPorFileZilla\n\n\n\nhostname: ftp.descsimp.online\ndirectory:　/home/u567637261/domains/descsimp.online/public_html/lsmicro\nusername: u567637261.lsmicro\nPassword: LSmicro23\n\n\n\nGIT (Dashboard / advanced)\n\n\n\nRepository\nBranch\nInstall Path\nActions\n\n\n\n\nhttps://github.com/MarceloRosales/descSPIM_LSmicro.git\nmain\n/public_html/lsmicro/\n\nDeploy\nView latest build output\nAuto Deployment\n\n\n\n\n\n\n\n\n\n\nHostinger » Advanced » GIT\nCreate new repository:\n\nRepository: https://github.com/MarceloRosales/descSPIM_LSmicro.git or git@github.com:MarceloRosales/descSPIM_LSmicro.git\nBranch: main\nDirectory: LSmicro\n\nCreate directory in hostinger “/public_html/lsmicro/” (make sure dir is empty)\nAdd ssh key (before clicking deploy button)\n\nGenerate SSH key\nCopy key\n\n\nGo back to github » Settings » deploy keys » add deploy key » paste key » add title: lsmicro »\n\nUn-check Allow write access (i want just to copy files to deploy only hostinger) »\n© Add key\nSSH hostinger-descsimp.online SHA256:hVtC0LQ00kEpo2alhWxaxDbhz0vM/+7jJ1hDQyvweo8\n\nGo back to hostinger Git » Manage Repositories » © deploy » Yes\nEnable Automated deployments:\n\nclick on “Auto deployment”\nCopy the webhook URL » © setup webhook on Github » …[github » settings » Webhooks »]…\nPaste URL in “Payload URL” » © Add webhook\n\nNow everytime you push content to github it wll automatically be deployed."
  },
  {
    "objectID": "posts/FPT_deploy.html#core-shell-01",
    "href": "posts/FPT_deploy.html#core-shell-01",
    "title": "Q website FPT deploy",
    "section": "Core-shell 01",
    "text": "Core-shell 01\nNow I am going to recreate the whole process in one go from scratch.\nFTPtest01:\nNote: it is easyer to create the repository in github first and then clone it to local (but it is better to know the process of creating the page first and then connecting to the github).\nRequirements before starting:\n\nHave a web hosting service (now using Hostinger.com ~80$y )\nHave a domain\n\nprostho2.com, 3 years, ID: 169kGMTjEV0XCrNF\nAuto-renew on, Renewal date: 2026-06-09\nprice: $10 (first year), Renewal price: $45.51…? (not ~$15?)\ndescsimp.online, 1 year, ID: Azq9UZTivX2bpNrZ0\nAuto-renew off, Expiration date: 2024-07-04\nprice: $1 (first year), Renewal price $35.17\n\n\nMain steps:\n\nCreate quarto website (local) repo\nCreate github repo.\nConnect local and github repo\nCreate sub-domain in Hostinger (with sub-folder)\nCreate new ftp account in Hostinger\nDelete all files in sub-folder\nSet GitHub secrets\nCreate Git Actions / workflows (deploy & control)\nRender and Test actions\n\nDescription:\n\ncreate quarto (local) repo\n\nfile new project » New directory » Quarto website » FTPtest01; ©create git repo; ©use renv for this project » create project\nOpen the _quarto.yml » in “project” type: output-dir: docs\nor… for fast deployment copy/paste _quarto.yml template 04.\nCreate scss files for theme and theme-dark options Copy/paste file:\nscss_files <- \"/Users/marcelorosales/Box Sync/Github/QuartoFiles\"\nsystem(paste(\"open\", shQuote(scss_files)))\nTo avoid the light-box filter error, install the lightbox extension inside the project folder itself. It is required for function of lightbox. (see Complete Lightbox Example post for more details)\nquarto add quarto-ext/lightbox\nBetter Not Render project to create the website until the end, normally a _site folder will is created but we changed output-dir: docs, so /docs folder will created instead and will be used to deploy the site in github.\n\ncreate github repo.\n\nNew repository » FPTtest01 » ©public » create repository\n\ngit ignore files: R,\nAdd /_site/ to .gitignore after creating the file\nAdd a .nojekyll file\nto the root of your repository that tells GitHub Pages not to do additional processing of your published site using Jekyll (the GitHub default site generation tool). see: Quarto-GitHub Pages\ntouch .nojekyll\nAdd other files or dir as necessary\n\nSettings » Pages » Branch: main; /docs » save\nset address in About (info) Got to // Code » code » clone » htpps (copy github page address)\n\nconnect local and github repo github quick setup.\n\nin github » code » copy https address » https://github.com/name/FTPtst01.git\nIn terminal:\ngit remote add origin https://github.com/MarceloRosales/FPTtest01.git\ngit branch -M main\ngit pull\ngit push -u origin main\n\n# error: src refspec main does not match any\n# error: failed to push some refs to 'https://github.com/MarceloRosales/FPTtest01.git'\n# This is (probably) because there is no previous commits to match with.\n\n\n\ngit add .\ngit commit -m \"fist commit\"\ngit push -u origin main\n# git pull\n# git branch --set-upstream-to=origin/main     \ngit push --set-upstream origin main\ngit config pull.rebase false    \n\ngit push -f origin main #this seems to solve the probelm\n\n#  ----- may not need this code\n\ngit pull    \n# There is no tracking information for the current branch.\ngit add .\ngit commit -m \"second commit\"\ngit push  \n# fatal: The current branch main has no upstream branch.\ngit push --set-upstream origin main\n\n# add text and render \ngit add .\ngit commit -m \"second commit\"\ngit push  \ngit status \n\n# Success!!!!\n\nComments:\nnew github repo message:\nQuick setup — if you’ve done this kind of thing before or\nhttps://github.com/MarceloRosales/FPTtest01.git\nGet started by creating a new file or uploading an existing file. We recommend every repository include a README, LICENSE, and .gitignore.\n…or create a new repository on the command line\necho \"# FPTtest01\" >> README.md\ngit init\ngit add README.md\ngit commit -m \"first commit\"\ngit branch -M main\ngit remote add origin https://github.com/MarceloRosales/FPTtest01.git\ngit push -u origin main\n…or push an existing repository from the command line\ngit remote add origin https://github.com/MarceloRosales/FPTtest01.git\ngit branch -M main\ngit push -u origin main\n…or import code from another repository\nYou can initialize this repository with code from a Subversion, Mercurial, or TFS project.\n\n\n\n\n\ncreate subdomain in hostinger.\nHome » Premium Web Hosting » Manage » ©[descsimp.online] » ˇDomains » Subdomains » Enter Subdomain: Sub_name » ©Custom folder for subdomain: Sub_name » Create\ncreate a new ftp account in hostinger\nHome » Premium Web Hosting » Manage » ©[descsimp.online] » ˇFiles » FTP Accounts » Create a new FTP Account » Directory: /public_html/Sub_name/ » Username: Sub_name » Password: LSmicro23 » Create\n\nUsername: ResearchNotes; A愛2\n\nsubfolder is created in hostinger with a php file, with manager delete all files and make sure is empty\nSet secrets in github\n\nDefine secrets, go // Settings » Secrets and variables » Actions » New repository secret » (create 2 secrets)…\n\nFTP_username (lsmicro or u567637261.lsmicro ?\n\nu567637261.descsimp.online ?\nu567637261.FTPtest01\nu567637261.ResearchNotes\n\nFTP_password\n\nLSmicro23\n”\nA愛２\n\n\n\nCreate Git Actions / workflows (deploy & control yml)\nThis link here creating your first workfolow was the key to unlock the problems of FTP deployment. There is a demo to check if actions are working.\n\ncreate folder .github/workflows/\nmkdir -p .github/workflows/\nCreate ftpdeploy.yml (set server: ftptest01.descsimp.online [subdomain!!] and change remote-dir: …)\ncd .github/workflows/\ntouch ftpdeploy.yml github-actions-demo.yml\n# for serial files\n# touch file_name{0001..0003}.txt\nname: 🚀 FTP Deploy\non:\n  push:\n    branches:\n      - main\njobs:\n  web-deploy:\n    name: 🎉 Deploy\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout Repository\n        uses: actions/checkout@v3\n      - name: FTP Deploy\n        uses: SamKirkland/FTP-Deploy-Action@v4.3.4\n        with:\n          server: ftptest01.descsimp.online # Subdomain name. !!NOT: FTP Accouns » Active hostname.. See:  //Hosting » Dashboard » Domains » Subdomains » List of current subdomains\n          username: ${{ secrets.FTP_USERNAME }} # Set in github  \n          password: ${{ secrets.FTP_PASSWORD }} # Set in github  \n          local-dir: ./docs/\n          remote-dir: ./public_html/FTPtest01/ # or subdomain folder\nCreate github-actions-demo.yml as control…\nname: GitHub Actions Demo\nrun-name: ${{ github.actor }} is testing out GitHub Actions 🚀\non: [push]\njobs:\n  Explore-GitHub-Actions:\n    runs-on: ubuntu-latest\n    steps:\n      - run: echo \"🎉 The job was automatically triggered by a ${{ github.event_name }} event.\"\n      - run: echo \"🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!\"\n      - run: echo \"🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}.\"\n      - name: Check out repository code\n        uses: actions/checkout@v3\n      - run: echo \"💡 The ${{ github.repository }} repository has been cloned to the runner.\"\n      - run: echo \"🖥️ The workflow is now ready to test your code on the runner.\"\n      - name: List files in the repository\n        run: |\n          ls ${{ github.workspace }}\n      - run: echo \"🍏 This job's status is ${{ job.status }}.\"\nrender and commit\n\nCheck actions in github. Actions » All workflows » FTP Deploy (green check means success!!)\nSave all and start pages content.\nTo create a blog:\n\nAdd the menu in the navbar section of the _quarto.yml file\n      - href: blog.qmd\n        text: \"Blog\"\nCreate blog.qmd file and a posts folder.\ntouch blog.qmd  \nmkdir posts \nIn the blog.qmd file add the head yml code:\ntitle: \"Blog\"\nlisting:\n  contents: posts # Contents will be taken from the posts folder\n  sort: \"date desc\"\n  type: default\n  categories: true\npage-layout: full\n#margin-header: signup.html\ntitle-block-banner: \"#EDF3F9\"\ntitle-block-banner-color: body\nsearch: false\nThis file is the the “main page” or “landing page” for the blogs.\nAll subsequent blog files need to be saved in the posts folder.The yml in this file will direct to the folder and the way is displayed.　 In other words, the yml section, the listing for this page comes from the contents in the folder posts…“contents: posts”\nQ: For organization convenience… Can I place this landing page file directly into the posts folder? No, the posts will be displayed in this page.\nEach blog post should have the proper yaml heading:\n\nCreate a .qmd file within the /posts folders.\ncd posts\ntouch file_name.qmd\nSimple example:\ntitle: \"Minimal post\"\ndescription: \"Post description\"\nauthor: \"Marcelo Rosales\"\ndate: \"2023/03/13\"\ncategories:\n  - news\n  - code\n  - analysis\nExample with lightbox filters, and html format\ntitle: \"Complete Lightbox Example\"\ndescription: \"How to use Lightbox\"\nauthor: \"Marcelo Rosales\"\ndate: \"2023/03/13\"\ncategories:\n  - photos\n  - lightbox\n  - gallelry\nfilters:\n  - lightbox\nlightbox:\n  match: auto\n  effect: fade\n  desc-position: right\n  loop: true\n#  css-class: \"my-css-class\" #only if custom css file exists. \nformat: \n  html: \n    code-fold: true\n    code-copy: true\n    code-overflow: wrap\nEditor: Source \nThere are also specific templates, ex. Jolla template:\ntitle: \"Jolla template\"\ndescription: \"quarto templates\"\nauthor: \"Marcelo Rosales\"\ndate: \"2023/03/16\"\ncategories:\n  - quarto\n  - code\n  - templates\n\nabout:\n  id: hero-heading\n  template: jolla\n  image: images/img01.png\n  links:\n    - icon: twitter\n      text: twitter\n      href: https://twitter.com\n    - icon: github\n      text: Github\n      href: https://github.com\n\n\n\nl"
  },
  {
    "objectID": "posts/FPT_deploy.html#other-references",
    "href": "posts/FPT_deploy.html#other-references",
    "title": "Q website FPT deploy",
    "section": "Other References:",
    "text": "Other References:\nHow to manage DNS Records at Hostinger\nManaging a custom domain for your GitHub Pages site\nCompare the Best Domain Hosting of 2023\n\n\n\n Auto Deploy Github Project into cPanel Shared Hosting With Github Actions CI/CD\n\n\n How To Use Git Version Control in cPanel | Git Tutorial by Web Hosting Canada\n\n\n How To Implement GitHub Actions To Your Workflows (With React & cPanel)\n\n\n\n\n Automatic Deployments On Shared Hosting\n\n\n Hostinger Redirects: How Do I Redirect with Hostinger using hpanel?\n\n\n (02) Setup Ftp Details For Automation | Build CI/CD pipeline with GitHub Actions\n\n\n\n\nHow to create an FTP account in Hostinger and upload with Filezilla?\n\n\n How to create an FTP account in Hostinger and upload with Filezilla?\n\n\n Deploy to shered hosting using github actions\n\n\n\n\n Hostinger PRO Panel: Make money and Manage Your Clients’ Websites Easily"
  },
  {
    "objectID": "posts/R&D_Notation.html",
    "href": "posts/R&D_Notation.html",
    "title": "R&D Notation",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\nThe choice between using Quarto and simple R Markdown depends on the specific needs and requirements of your project. Here are a few reasons why you might consider using Quarto:\n\nEnhanced functionality: Quarto offers additional features and functionality compared to simple R Markdown. It provides support for literate programming, version control, customizable templates, and more. If you require advanced capabilities for your project, such as generating reports with complex formatting, incorporating interactive elements, or integrating code and documentation seamlessly, Quarto can be a powerful tool.\nDocument generation and collaboration: Quarto is designed for collaborative document generation, making it easier for teams to work together on projects. It provides features like automated rendering, document caching, and document diffing, which can facilitate collaboration and streamline the document development process.\nExtensibility: Quarto allows for extensibility through custom engines, allowing you to integrate additional programming languages or document formats into your project. This flexibility can be beneficial if you need to incorporate non-R code or work with specific document formats beyond what simple R Markdown offers.\nCommunity and support: Quarto has an active community of users and developers who contribute to its development and provide support. If you encounter any issues or have questions, you can rely on community resources to find assistance and guidance.\n\nHowever, it’s important to note that simple R Markdown is still a powerful and widely used tool for generating documents with R. If your project requirements are straightforward and don’t require the additional features provided by Quarto, using simple R Markdown may be sufficient and more straightforward. Ultimately, the choice between Quarto and simple R Markdown should be based on your specific project needs, preferences, and the complexity of the document you aim to generate.\n\n\nProblem 1: Notebook keeping.\nExperimental notes are distributed in many different folders and files; sometimes even in different drives and it is difficult to keep track of all information. A centralized direct access to information at any time is required.\nThe standard way to do it is by using Microsoft Office programs\nWord:\nPros:\n\nBest way to manage “tables” within text editor.\nInter-compatibility with word, excel, ppt and other programs.\nEasy to send and collaborate with others.\nThe Standard for all purposes.\n\nCons:\n\nFile size gets too big very fast.\nimages and links slows down computer.\nFiles are scatter all around different folders, hard to manage.\nNo easy way to compile information across projects and experiments.\n\nProblem 2: Software and code management.\n\nCode management is a serious problem, word cannot manage it at all.\n\n\nSoftware:\n\nbrew to install all research software.\nMS Office\nR and RStudio\nVS Code\nQuarto\nZotero\nAnaconda\nGit\nGitHub\nGit Kraken\nImageJ\nCalibre\nDigiKam\nDocker?\nSyncthing\nFreeCad\nBlender\n\n\nSmall digression: Think on the possibility of a centrilized Folder for all notes, word, r, qmd, pyton, bash, and using symlinks to move and compile projects (like a puzzle) to create new content.\n\n\nWhy I am changeing to quarto?"
  },
  {
    "objectID": "posts/R&D_Notation.html#solutions",
    "href": "posts/R&D_Notation.html#solutions",
    "title": "R&D Notation",
    "section": "Solutions:",
    "text": "Solutions:\nkey Shortcuts: Files: Excel best tricks.xlsx; Markdown02.docx\n\nNotekeeping:\n1. Save all notes in one place.\n/Users/marcelorosales/Box Sync/Niigata Uni Box/Books-Notes/Notes, then symlik to other projects.\n\nDoes symlinks work with github, syncthing, synology, host (hostinger), etc?\nWhich type of symlik is best? soft or hard?\n\n2. Files and folders:\n/Users/marcelorosales/Box Sync/Github\n\nDotFiles: What are dotfiles? To create executable file to install all programs ex. brew.sh and settings at once with one executable command.\n\nconda shells\niTerm: Fonts\n\nGitBooks: What are Gitbooks?\nmkdocs\nNiigataU-Carving: html\nQuarto (VS and R)\nRstudio: Shared files among devices\nVisual Studio Code\n\n/Users/marcelorosales/Box Sync/Documents/R\n\nCourse01-R Programming A-Z\nCourse02- R Programing - Advanced Analitics\nR Bookdown\nR Example scripts\nR exmple df\nR external sources\nR package files\nR Preferences and packages\nRmarkdown\nTests forlder\nWorking Directory\n\nMBP20 files: /Users/marcelorosales/Documents/GitHub:\n\nBioinformatics_RNA-seq (Gitbook)**\nCarving (HTML web page made entirely manually)\nDotFiles (Empty) x\nExample (Hugo Site trial01, empty) x\nImg (RNA analysis image samples)\nMkdocs_books (Trial site with 1 symlink file from /Box Sync/Github/mkdocs/bs4_LabNotes/ _book/08-Preparation.md) *\nmkdocs_Tests (Trial of submenus in mkdocs) x\nMkDocsTest1 (Trial of mkdocs multilingual feature, VS_code,md, MkDocs,md) *\nQuarto:\nquarto-tip-a-day (webpage downloaded from quarto site)\nquarto-trials:\n\nquarto_blog\nquarto_book\nquarto_project\nquarto_website (Quarto page test01, https://marcelorosales.github.io/Quarto_website_test01/) +++\n\nquarto-web (Downloaded entire quarto web site)\nResearch_Experiments:\n\nPhotoConvertibleCells (Example only, no content)\n\nResearch_Notebook: (Experiment Notebooks, All reseach Notes, https://marcelorosales.github.io/Research_Notebook/ )\nRetrolog (Hugo lithium) x\nTemptests (RNA Seq for STAT3 example of RNA sequencing) **\nVS Code (VS code cheat sheets) *\nZdocTest1 (Zdoc-blogdown test) x\nzipfiles\nHugotree.docx\nResearch_Notebook.Rmd (Research Notes, Research Notebook) **\n\nMBP15 files:\nSynology files:\nGithub pages:\nMarceloRosales/MkDocsTest1\nMarceloRosales/Research_Notebook\nMarceloRosales/mkd_LabNotes\nMarceloRosales/Bioinformatics_RNA-seq\nMarceloRosales/NiigataU-SV\nMarceloRosales/Carving\nMarceloRosales/MarceloRosales ¿???\nMarceloRosales/PCC-Experiment\nMarceloRosales/RBD02\nMarceloRosales/NiigataU-Carving\nMarceloRosales/RBlogdowntest01\nMarceloRosales/WebDev-01\nMarceloRosales/BootstrapCarrousel\nMarceloRosales/staticrypt\nMkDocsTest1 https://marcelorosales.github.io/MkDocsTest1/MkDocs/\nResearch_Notebook https://marcelorosales.github.io/Research_Notebook/\nmkd_LabNotes https://marcelorosales.github.io/mkd_LabNotes/\nBioinformatics_RNA-seq https://marcelorosales.github.io/Bioinformatics_RNA-seq/\nNiigataU-SV https://marcelorosales.github.io/NiigataU-SV/\nCarving https://marcelorosales.github.io/Carving/\nMarceloRosales ¿?? PCC-Experiment https://marcelorosales.github.io/PCC-Experiment/\nRBD02 https://marcelorosales.github.io/RBD02/ A minimal book ex.\nNiigataU-Carving https://marcelorosales.github.io/NiigataU-Carving/\nRBlogdowntest01 (not live) WebDev-01 https://marcelorosales.github.io/WebDev-01/\nBootstrapCarrousel https://marcelorosales.github.io/BootstrapCarrousel/\nStaticrypt (exec only)\n\n\n\nMarceloRosales/MkDocsTest1\n>\nMkDocsTest1 https://marcelorosales.github.io/MkDocsTest1/MkDocs/\n\n\nMarceloRosales/Research_Notebook\n>\nResearch_Notebook https://marcelorosales.github.io/Research_Notebook/\n\n\nMarceloRosales/mkd_LabNotes\n>\nmkd_LabNotes https://marcelorosales.github.io/mkd_LabNotes/\n\n\nMarceloRosales/Bioinformatics_RNA-seq\n>\nBioinformatics_RNA-seq https://marcelorosales.github.io/Bioinformatics_RNA-seq/\n\n\nMarceloRosales/NiigataU-SV\n>\nNiigataU-SV https://marcelorosales.github.io/NiigataU-SV/\n\n\nMarceloRosales/Carving\n>\nCarving https://marcelorosales.github.io/Carving/\n\n\nMarceloRosales/MarceloRosales ¿???\n>\n<MarceloRosales ¿??>\n\n\nMarceloRosales/PCC-Experiment\n>\nPCC-Experiment https://marcelorosales.github.io/PCC-Experiment/\n\n\nMarceloRosales/RBD02\n>\nRBD02 <https://marcelorosales.github.io/RBD02/ A minimal book ex.>\n\n\nMarceloRosales/NiigataU-Carving\n>\nNiigataU-Carving https://marcelorosales.github.io/NiigataU-Carving/\n\n\nMarceloRosales/RBlogdowntest01\n>\n<RBlogdowntest01 (not live)>\n\n\nMarceloRosales/WebDev-01\n>\nWebDev-01 https://marcelorosales.github.io/WebDev-01/\n\n\nMarceloRosales/BootstrapCarrousel\n>\nBootstrapCarrousel https://marcelorosales.github.io/BootstrapCarrousel/\n\n\nMarceloRosales/staticrypt\n>\n<Staticrypt (exec only)>\n\n\n\n\nHow to use:\nWhere do I write the text first? word, Rstudio .qmd, VS code?\n\nI am thinking I will I will use the 3 of them (word, RStudio (RS).qmd, VS code (VSC)) at the same time.\nSeems like VC code is the middle ground between word and Rstudio. 20230502 test: Use VS code as the main text/code editor, then copy paste to word.\n\nCreate a qmd file/project in RS, git init, save project.\nOpen RS qmd file in VS code and use as main text editor.\nChange/add content, save in VS code > will auto update in RS (no need to do anything except to reload/open file).\nCheck if render is correct.\nCopy/paste to word and save in word. Currently it is not possible to open a word file directly in VSC.\n\nUse word and .qmd (in source mode only) at the same time and indistinctively…\nDO NOT SWITCH TO VISUAL MODE. Changing to visual mode will modify text in the source code format. Space between lines is doble and there is no way to change it in the ui of rstudio, only in the render output. It makes it difficult to read and orginize.\nThus, keep all records in the word file at all times. Make de word file the default saving format.\nOpen Untitled .qmd files to try and test code chunks or formats.\nOpen an Image .qmd file in visual mode to store all image code and links for a fast gallery, then easy to copy/paste images to other places.\nIf large code needs to be quickly formated for word (coz copy/paste from rstudio to word directly does not copy code highlight formats), use VS code, copy/paste Rstudio > VS Code > word. Then adjust line spacing.\n\n\n\nOpen Word file\n(See Markdown02.docx > Word and Rstudio for detail info on the code)\nfiles:\nMac:\n\n\nCode\nMarkdown02 <- \"/Users/marcelorosales/Box Sync/Niigata Uni Box/Books-Notes/Notes/Markdown02.docx\"  \n\nResearch_map <- \"/Users/marcelorosales/Box Sync/Niigata Uni Box/Books-Notes/Notes/Research_map and guide.docx\"  \n\nMarkdown01 <- \"/Users/marcelorosales/Box Sync/Niigata Uni Box/Books-Notes/Notes/Markdown01.docx\"\n\nNotes <- \"/Users/marcelorosales/Box Sync/Niigata Uni Box/Books-Notes/Notes/\"\n\nexcel <- \"/Users/marcelorosales/Documents/GitHub/Quarto/quarto-trials/quarto_website/test.xlsx\"\n\n#open in mac OS\nsystem(paste(\"open\", shQuote(Markdown02)))\nsystem(paste(\"open\", shQuote(Research_map)))\nsystem(paste(\"open\", shQuote(Notes)))\nsystem(paste(\"open\", shQuote(excel)))\n\n\nexcel file test\nWindows:\n\n\nCode\nfile_path <- \"/Users/marcelorosales/Box Sync/Niigata Uni Box/Books-Notes/Notes/Markdown01.docx\"\nshell(paste(\"start\", shQuote(file_path)))\n# or \nsystem(paste(\"start\", shQuote(file_path)))\n\n\n\n\n\nRmd\n\n\nCode\nexcel <- \"/Users/marcelorosales/Documents/GitHub/Quarto/quarto-trials/quarto_website/test.xlsx\"\nsystem(paste(\"open\", shQuote(excel)))"
  }
]